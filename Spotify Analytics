# In this project, I:
# Downloaded Spotify data from Kaggle.
# Created a table to store the Spotify data.
# Conducted data analysis using SQL.

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

#Then I inserted the Spotify Data .csv into the table.

#Next, I came up with questions and explored the data using the following SQL. 

# Which tracks have the highest danceablility?

SELECT track_name, artist_name, danceability
FROM Spotifydata
ORDER BY danceability DESC
LIMIT 10;

# Who are the top 10 artists based on popularity?

SELECT artist_name, AVG(popularity) AS avg_popularity
FROM Spotifydata
GROUP BY artist_name
ORDER BY avg_popularity DESC
LIMIT 10;

# What is the average popularity of tracks across all artists?

SELECT AVG(popularity) FROM Spotifydata;

# Which artist has the most tracks in the dataset?

SELECT artist_name, COUNT(track_id) AS track_count 
FROM Spotifydata 
GROUP BY artist_name 
ORDER BY track_count DESC 
LIMIT 1;

# Which tracks have the highest average acousticness?

SELECT artist_name, AVG(acousticness) AS avg_acousticness 
FROM Spotifydata 
GROUP BY artist_name 
ORDER BY avg_acousticness DESC 
LIMIT 10;

# Can we predict the average popularity of a track based on its audio features?

SELECT AVG(popularity) AS predicted_popularity, AVG(danceability), AVG(energy), AVG(tempo), AVG(acousticness), AVG(liveness) 
FROM Spotifydata 
GROUP BY track_id;
